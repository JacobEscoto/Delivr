package deliveryapp;

import java.awt.Color;
import javax.swing.JOptionPane;

public class PaqueteScreen extends javax.swing.JPanel {

    Metodos mt = new Metodos();

    public PaqueteScreen() {
        initComponents();
        for (Cliente cliente : Dashboard.clientes) {
            asociarBox.addItem("Nombre: " + cliente.getNombre() + " " + cliente.getApellido() + " | ID: " + cliente.getIdCliente());
        }
        categoryLbl.setVisible(false);
        catBox.setVisible(false);
        pesoLbl.setVisible(false);
        pesoField.setVisible(false);
        descLbl.setVisible(false);
        descField.setVisible(false);
        seguroCheck.setVisible(false);
        asociadoLbl.setVisible(false);
        asociarBox.setVisible(false);
        registerBtn.setVisible(false);
        scrollPane.setVisible(false);
        listaPackArea.setVisible(false);
        delBtn.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        listarBtn = new javax.swing.JButton();
        categoryLbl = new javax.swing.JLabel();
        catBox = new javax.swing.JComboBox<>();
        pesoLbl = new javax.swing.JLabel();
        pesoField = new javax.swing.JTextField();
        seguroCheck = new javax.swing.JCheckBox();
        asociadoLbl = new javax.swing.JLabel();
        asociarBox = new javax.swing.JComboBox<>();
        descLbl = new javax.swing.JLabel();
        descField = new javax.swing.JTextField();
        registerBtn = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        listaPackArea = new javax.swing.JTextArea();
        delBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(19, 28, 38));
        setMaximumSize(new java.awt.Dimension(766, 488));
        setMinimumSize(new java.awt.Dimension(766, 488));
        setPreferredSize(new java.awt.Dimension(766, 488));

        addBtn.setBackground(new java.awt.Color(31, 114, 193));
        addBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("Agregar Paquete");
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(31, 114, 193));
        searchBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Buscar Paquete");
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        listarBtn.setBackground(new java.awt.Color(31, 114, 193));
        listarBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        listarBtn.setForeground(new java.awt.Color(255, 255, 255));
        listarBtn.setText("Listar Paquetes");
        listarBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarBtnActionPerformed(evt);
            }
        });

        categoryLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        categoryLbl.setForeground(new java.awt.Color(255, 255, 255));
        categoryLbl.setText("Categoria:");

        catBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Ropa", "Comida", "Medicina", "Tecnologia", "Fragil" }));

        pesoLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pesoLbl.setForeground(new java.awt.Color(255, 255, 255));
        pesoLbl.setText("Peso:");

        seguroCheck.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        seguroCheck.setForeground(new java.awt.Color(255, 255, 255));
        seguroCheck.setText("Â¿Incluir Seguro?");

        asociadoLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        asociadoLbl.setForeground(new java.awt.Color(255, 255, 255));
        asociadoLbl.setText("Cliente:");

        asociarBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  " }));
        asociarBox.setMaximumSize(new java.awt.Dimension(72, 22));
        asociarBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asociarBoxActionPerformed(evt);
            }
        });

        descLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        descLbl.setForeground(new java.awt.Color(255, 255, 255));
        descLbl.setText("Descripcion:");

        registerBtn.setBackground(new java.awt.Color(31, 114, 193));
        registerBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerBtn.setForeground(new java.awt.Color(255, 255, 255));
        registerBtn.setText("Registrar");
        registerBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        listaPackArea.setBackground(new java.awt.Color(19, 28, 38));
        listaPackArea.setColumns(20);
        listaPackArea.setForeground(new java.awt.Color(255, 255, 255));
        listaPackArea.setRows(5);
        listaPackArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PAQUETES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        scrollPane.setViewportView(listaPackArea);

        delBtn.setBackground(new Color(0, 0, 0, 0));
        delBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/deleteBtn.png"))); // NOI18N
        delBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addBtn)
                        .addGap(45, 45, 45)
                        .addComponent(searchBtn)
                        .addGap(45, 45, 45)
                        .addComponent(listarBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(categoryLbl)
                                .addGap(12, 12, 12))
                            .addComponent(descLbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(catBox, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pesoLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pesoField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(descField, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seguroCheck))))
                    .addComponent(scrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(registerBtn)
                        .addGap(170, 170, 170))
                    .addComponent(delBtn)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(asociadoLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(asociarBox, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(161, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(searchBtn)
                    .addComponent(listarBtn))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLbl)
                    .addComponent(catBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesoLbl)
                    .addComponent(pesoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descLbl)
                    .addComponent(seguroCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asociarBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(asociadoLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registerBtn)
                .addGap(18, 18, 18)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delBtn)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        categoryLbl.setVisible(true);
        catBox.setVisible(true);
        pesoLbl.setVisible(true);
        pesoField.setVisible(true);
        descLbl.setVisible(true);
        descField.setVisible(true);
        seguroCheck.setVisible(true);
        asociadoLbl.setVisible(true);
        asociarBox.setVisible(true);
        registerBtn.setVisible(true);
        scrollPane.setVisible(false);
        listaPackArea.setVisible(false);
        delBtn.setVisible(false);

    }//GEN-LAST:event_addBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        if (Dashboard.paquetes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todavia no hay paquetes registrados", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        } else {
            categoryLbl.setVisible(false);
            catBox.setVisible(false);
            pesoLbl.setVisible(false);
            pesoField.setVisible(false);
            descLbl.setVisible(false);
            descField.setVisible(false);
            seguroCheck.setVisible(false);
            asociadoLbl.setVisible(false);
            asociarBox.setVisible(false);
            registerBtn.setVisible(false);
            scrollPane.setVisible(false);
            listaPackArea.setVisible(false);
            delBtn.setVisible(false);
            String search = JOptionPane.showInputDialog(this, "Escriba dato o parametro a buscar:");
            String resultado = "";
            boolean borrado = false;
            for (int i = 0; i < Dashboard.paquetes.size(); i++) {
                Paquete searchPaquete = Dashboard.paquetes.get(i);
                if (searchPaquete.getIdPaquete().equals(search) || searchPaquete.getCategoria().equalsIgnoreCase(search) || searchPaquete.getCliente().getNombre().equalsIgnoreCase(search)) {
                    resultado += searchPaquete + "\n";
                }
            }
            
            if(resultado.equals("")) {
                JOptionPane.showMessageDialog(this, "No se encontro ningun paquete con el dato proporcionado", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, resultado, "RESULTADO", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void listarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarBtnActionPerformed
        if (Dashboard.paquetes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todavia no hay paquetes registrados", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        } else {
            categoryLbl.setVisible(false);
            catBox.setVisible(false);
            pesoLbl.setVisible(false);
            pesoField.setVisible(false);
            descLbl.setVisible(false);
            descField.setVisible(false);
            seguroCheck.setVisible(false);
            asociadoLbl.setVisible(false);
            asociarBox.setVisible(false);
            registerBtn.setVisible(false);
            String resultado = "";
            for (int i = 0; i < Dashboard.paquetes.size(); i++) {
                Paquete paquete = Dashboard.paquetes.get(i);
                resultado += (i + 1) + ") ID: " + paquete.getIdPaquete() + " | Categoria: " + paquete.getCategoria() + " | Peso: " + paquete.getPeso() + "| Seguro: " + paquete.getIncluirSeguro() + "\n";
            }
            listaPackArea.setText(resultado);
            listaPackArea.setEditable(false);
            scrollPane.setVisible(true);
            listaPackArea.setVisible(true);
            delBtn.setVisible(true);
        }
    }//GEN-LAST:event_listarBtnActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        boolean validado = true;
        String idPaquete = mt.generarId();
        String categoria = catBox.getSelectedItem().toString();
        if (categoria.equals("")) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Seleccione una categoria", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String entradaPeso = pesoField.getText();
        double peso = 0;
        boolean pesoValido = mt.esDouble(entradaPeso);
        if (!pesoValido) {
            JOptionPane.showMessageDialog(this, "Dato de peso invalido", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            validado = false;
        } else {
            peso = Double.parseDouble(entradaPeso);
        }
        String descripcion = descField.getText();
        boolean incluirSeguro = false;
        if (seguroCheck.isSelected()) {
            incluirSeguro = true;
        }
        String clienteAsociado = asociarBox.getSelectedItem().toString();
        String idSocio = "";
        if (clienteAsociado.equals("") || clienteAsociado.isEmpty() || clienteAsociado.isBlank()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "No seleccionaste ningun cliente asociado al paquete", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        } else {
            idSocio = clienteAsociado.substring(clienteAsociado.indexOf("ID:") + 4);
        }

        Cliente socio = null;
        if (validado) {
            for (int i = 0; i < Dashboard.clientes.size(); i++) {
                if (Dashboard.clientes.get(i).getIdCliente().equals(idSocio)) {
                    socio = Dashboard.clientes.get(i);
                    break;
                }
            }
        }

        if (!validado) {
            JOptionPane.showMessageDialog(this, "No se pudo agregar el paquete", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            Paquete paquete = new Paquete(idPaquete, categoria, peso, descripcion, incluirSeguro, socio);
            Dashboard.paquetes.add(paquete);
            JOptionPane.showMessageDialog(this, "Paquete agregado con exito", "EXITO", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_registerBtnActionPerformed

    private void asociarBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asociarBoxActionPerformed

    }//GEN-LAST:event_asociarBoxActionPerformed

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        boolean borrado = false;
        String borrar = JOptionPane.showInputDialog(this, "Escriba ID del paquete a borrar:");
        for (int i = 0; i < Dashboard.paquetes.size(); i++) {
            Paquete elimPaquete = Dashboard.paquetes.get(i);
            if (elimPaquete.getIdPaquete().equals(borrar)) {
                Dashboard.paquetes.remove(i);
                borrado = true;
                break;
            }
        }

        if (!borrado) {
            JOptionPane.showMessageDialog(this, "No se encontro ningun paquete con el ID proporcionado", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Paquete eliminado con exito", "BORRADO", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_delBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel asociadoLbl;
    private javax.swing.JComboBox<String> asociarBox;
    private javax.swing.JComboBox<String> catBox;
    private javax.swing.JLabel categoryLbl;
    private javax.swing.JButton delBtn;
    private javax.swing.JTextField descField;
    private javax.swing.JLabel descLbl;
    private javax.swing.JTextArea listaPackArea;
    private javax.swing.JButton listarBtn;
    private javax.swing.JTextField pesoField;
    private javax.swing.JLabel pesoLbl;
    private javax.swing.JButton registerBtn;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JButton searchBtn;
    private javax.swing.JCheckBox seguroCheck;
    // End of variables declaration//GEN-END:variables
}
