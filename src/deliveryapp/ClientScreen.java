/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package deliveryapp;

import javax.swing.JOptionPane;

/**
 *
 * @author djaco
 */
public class ClientScreen extends javax.swing.JPanel {

    Metodos verify = new Metodos();

    public ClientScreen() {
        initComponents();
        nameLbl.setVisible(false);
        nameField.setVisible(false);
        telLbl.setVisible(false);
        telField.setVisible(false);
        correoLbl.setVisible(false);
        correoField.setVisible(false);
        edadLbl.setVisible(false);
        edadField.setVisible(false);
        dirLbl.setVisible(false);
        dirField.setVisible(false);
        registerBtn.setVisible(false);
        jScrollPane1.setVisible(false);
        listaClientes.setVisible(false);
        totalLbl.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchClient = new javax.swing.JButton();
        addClient = new javax.swing.JButton();
        listClients = new javax.swing.JButton();
        edadField = new javax.swing.JTextField();
        dirField = new javax.swing.JTextField();
        correoLbl = new javax.swing.JLabel();
        telLbl = new javax.swing.JLabel();
        registerBtn = new javax.swing.JButton();
        correoField = new javax.swing.JTextField();
        dirLbl = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        telField = new javax.swing.JTextField();
        edadLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaClientes = new javax.swing.JTextArea();
        totalLbl = new javax.swing.JLabel();
        borrarClient = new javax.swing.JButton();

        setBackground(new java.awt.Color(19, 28, 38));

        searchClient.setBackground(new java.awt.Color(31, 114, 193));
        searchClient.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        searchClient.setForeground(new java.awt.Color(255, 255, 255));
        searchClient.setText("Buscar Cliente");
        searchClient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClientActionPerformed(evt);
            }
        });

        addClient.setBackground(new java.awt.Color(31, 114, 193));
        addClient.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addClient.setForeground(new java.awt.Color(255, 255, 255));
        addClient.setText("Agregar Cliente");
        addClient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClientActionPerformed(evt);
            }
        });

        listClients.setBackground(new java.awt.Color(31, 114, 193));
        listClients.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        listClients.setForeground(new java.awt.Color(255, 255, 255));
        listClients.setText("Lista de Clientes");
        listClients.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listClients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listClientsActionPerformed(evt);
            }
        });

        dirField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dirFieldActionPerformed(evt);
            }
        });

        correoLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        correoLbl.setForeground(new java.awt.Color(255, 255, 255));
        correoLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        correoLbl.setText("Correo:");

        telLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        telLbl.setForeground(new java.awt.Color(255, 255, 255));
        telLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        telLbl.setText("Tel:");

        registerBtn.setBackground(new java.awt.Color(31, 114, 193));
        registerBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerBtn.setForeground(new java.awt.Color(255, 255, 255));
        registerBtn.setText("Registrar");
        registerBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        dirLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        dirLbl.setForeground(new java.awt.Color(255, 255, 255));
        dirLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dirLbl.setText("Direccion:");

        nameLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        nameLbl.setForeground(new java.awt.Color(255, 255, 255));
        nameLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLbl.setText("Nombre:");

        nameField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        edadLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        edadLbl.setForeground(new java.awt.Color(255, 255, 255));
        edadLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        edadLbl.setText("Edad:");

        listaClientes.setEditable(false);
        listaClientes.setBackground(new java.awt.Color(19, 28, 38));
        listaClientes.setColumns(20);
        listaClientes.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        listaClientes.setForeground(new java.awt.Color(255, 255, 255));
        listaClientes.setRows(5);
        listaClientes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CLIENTES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        listaClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(listaClientes);

        totalLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        totalLbl.setForeground(new java.awt.Color(255, 255, 255));
        totalLbl.setText("TOTAL: ");

        borrarClient.setBackground(new java.awt.Color(255, 51, 51));
        borrarClient.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        borrarClient.setForeground(new java.awt.Color(255, 255, 255));
        borrarClient.setText("Borrar Cliente");
        borrarClient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        borrarClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(totalLbl))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 33, Short.MAX_VALUE)
                        .addComponent(addClient)
                        .addGap(18, 18, 18)
                        .addComponent(searchClient)
                        .addGap(18, 18, 18)
                        .addComponent(listClients)
                        .addGap(18, 18, 18)
                        .addComponent(borrarClient)
                        .addGap(130, 130, 130))))
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameLbl)
                            .addComponent(correoLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addComponent(correoField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(telLbl))
                            .addComponent(edadLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(telField, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(edadField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(dirLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dirField, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(registerBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchClient)
                    .addComponent(addClient)
                    .addComponent(listClients)
                    .addComponent(borrarClient))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLbl)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telLbl)
                    .addComponent(telField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(correoLbl)
                    .addComponent(correoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edadLbl)
                    .addComponent(edadField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dirLbl)
                    .addComponent(dirField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalLbl)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClientActionPerformed
        nameLbl.setVisible(false);
        nameField.setVisible(false);
        telLbl.setVisible(false);
        telField.setVisible(false);
        correoLbl.setVisible(false);
        correoField.setVisible(false);
        edadLbl.setVisible(false);
        edadField.setVisible(false);
        dirLbl.setVisible(false);
        dirField.setVisible(false);
        registerBtn.setVisible(false);
        jScrollPane1.setVisible(false);
        listaClientes.setVisible(false);
        totalLbl.setVisible(false);
        if (Dashboard.clientes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay clientes registrados", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        } else {
            String search = JOptionPane.showInputDialog(this, "Ingrese parametro de busqueda:");
            if (search == null || search.isEmpty() || search.isBlank()) {
                return;
            }
            String resultado = "";

            for (Cliente cliente : Dashboard.clientes) {
                if (cliente.getIdCliente().equals(search) || cliente.getNombre().equalsIgnoreCase(search)) {
                    resultado += cliente + "\n";
                }

            }

            if (resultado.equals("")) {
                JOptionPane.showMessageDialog(this, "No se encontraron resultados de tu busqueda", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Resultados encontrados! \n" + resultado, "ENCONTRADO", JOptionPane.INFORMATION_MESSAGE);
            }
        }


    }//GEN-LAST:event_searchClientActionPerformed

    private void addClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClientActionPerformed
        nameLbl.setVisible(true);
        nameField.setVisible(true);
        telLbl.setVisible(true);
        telField.setVisible(true);
        correoLbl.setVisible(true);
        correoField.setVisible(true);
        edadLbl.setVisible(true);
        edadField.setVisible(true);
        dirLbl.setVisible(true);
        dirField.setVisible(true);
        registerBtn.setVisible(true);
        jScrollPane1.setVisible(false);
        listaClientes.setVisible(false);
        totalLbl.setVisible(false);
    }//GEN-LAST:event_addClientActionPerformed

    private void listClientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listClientsActionPerformed
        if (Dashboard.clientes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay clientes registrados", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        } else {
            nameLbl.setVisible(false);
            nameField.setVisible(false);
            telLbl.setVisible(false);
            telField.setVisible(false);
            correoLbl.setVisible(false);
            correoField.setVisible(false);
            edadLbl.setVisible(false);
            edadField.setVisible(false);
            dirLbl.setVisible(false);
            dirField.setVisible(false);
            registerBtn.setVisible(false);

            int total = 0;
            int size = Dashboard.clientes.size();
            String resultado = "";
            for (int i = 0; i < size; i++) {
                resultado += Dashboard.clientes.get(i).toString() + "\n";
                total++;
            }

            listaClientes.setText(resultado);
            totalLbl.setText("TOTAL: " + total);
            jScrollPane1.setVisible(true);
            listaClientes.setVisible(true);
            listaClientes.setEditable(false);
            totalLbl.setVisible(true);

        }
    }//GEN-LAST:event_listClientsActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        String entrada = nameField.getText();
        String verificarEdad = edadField.getText();
        String telefono = telField.getText();
        String correo = correoField.getText();
        String direccion = dirField.getText();
        boolean valido = verify.verificacionDatos(entrada, verificarEdad, telefono, correo, direccion);

        if (!valido) {
            JOptionPane.showMessageDialog(this, "No se agrego ningun cliente!\nDatos Invalidos o Vacios", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            String nombre = entrada.substring(0, entrada.indexOf(" ") - 1);
            String apellido = entrada.substring(entrada.indexOf(" ") + 1);
            int edad = Integer.parseInt(verificarEdad);
            String idClient = verify.generarId(nombre);
            Cliente newClient = new Cliente(nombre, apellido, idClient, edad, telefono, correo, direccion);
            Dashboard.clientes.add(newClient);
            JOptionPane.showMessageDialog(this, "El cliente fue agregado con exito!", "EXITO", JOptionPane.INFORMATION_MESSAGE);
        }

        nameField.setText(null);
        edadField.setText(null);
        telField.setText(null);
        correoField.setText(null);
        dirField.setText(null);
    }//GEN-LAST:event_registerBtnActionPerformed

    private void dirFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dirFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dirFieldActionPerformed

    private void borrarClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarClientActionPerformed
        nameLbl.setVisible(false);
        nameField.setVisible(false);
        telLbl.setVisible(false);
        telField.setVisible(false);
        correoLbl.setVisible(false);
        correoField.setVisible(false);
        edadLbl.setVisible(false);
        edadField.setVisible(false);
        dirLbl.setVisible(false);
        dirField.setVisible(false);
        registerBtn.setVisible(false);
        jScrollPane1.setVisible(false);
        listaClientes.setVisible(false);
        if (Dashboard.clientes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay clientes registrados", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        } else {

            String borrar;
            do {
                borrar = JOptionPane.showInputDialog("Ingrese nombre o id del Cliente a borrar:");
                if (borrar.isEmpty() || borrar.equals(" ")) {
                    return;
                }
            } while (borrar.isEmpty() || borrar.equals(" "));
            
            boolean borrado = false;
            for (int i = 0; i < Dashboard.clientes.size(); i++) {
                Cliente elimCliente = Dashboard.clientes.get(i);
                if(elimCliente.getNombre().equalsIgnoreCase(borrar) || elimCliente.getIdCliente().equals(borrar)) {
                    Dashboard.clientes.remove(i);
                    borrado = true;
                    break;
                }
            }
            
            if(!borrado) {
                JOptionPane.showMessageDialog(this, "No se encontro al cliente a borrar", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Cliente borrado con exito", "EXITO", JOptionPane.INFORMATION_MESSAGE);
            }
        }

    }//GEN-LAST:event_borrarClientActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addClient;
    private javax.swing.JButton borrarClient;
    private javax.swing.JTextField correoField;
    private javax.swing.JLabel correoLbl;
    private javax.swing.JTextField dirField;
    private javax.swing.JLabel dirLbl;
    private javax.swing.JTextField edadField;
    private javax.swing.JLabel edadLbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listClients;
    private javax.swing.JTextArea listaClientes;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JButton registerBtn;
    private javax.swing.JButton searchClient;
    private javax.swing.JTextField telField;
    private javax.swing.JLabel telLbl;
    private javax.swing.JLabel totalLbl;
    // End of variables declaration//GEN-END:variables
}
